{"version":3,"sources":["components/audios.js","components/App.js","index.js"],"names":["sounds","id","text","url","App","props","state","is_on","display_text","key","clip","handleInteraction","bind","handleButtonPress","handleKeyPress","handleToggle","componentDidMount","newText","newClip","this","setState","document","getElementsByClassName","play","event","target","toUpperCase","includes","getElementById","click","addEventListener","checked","onChange","onClick","is_disabled","activeKey","Component","DisplayComponent","Alert","variant","ButtonsContainer","className","src","Object","keys","map","k","Button","disabled","ToggleComponent","size","onstyle","offstyle","onlabel","offlabel","ReactDOM","render","StrictMode"],"mappings":"8QAiCeA,G,MAjCA,CACX,EAAK,CACDC,GAAI,QACJC,KAAM,sBACNC,IAAK,gGAET,EAAK,CACDF,GAAI,UACJC,KAAM,eACNC,IAAK,iGAET,EAAK,CACDF,GAAI,YACJC,KAAM,qDACNC,IAAK,0GAET,EAAK,CACDF,GAAI,QACJC,KAAM,mBACNC,IAAK,8FAET,EAAK,CACDF,GAAI,QACJC,KAAM,UACNC,IAAK,+FAET,EAAK,CACDF,GAAI,OACJC,KAAM,qBACNC,IAAK,gG,iCCdPC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,gBACKC,MAAQ,CACXC,OAAO,EACPC,aAAc,2BACdC,IAAK,GACLC,KAAM,IAER,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBACzB,EAAKC,kBAAoB,EAAKA,kBAAkBD,KAAvB,gBACzB,EAAKE,eAAiB,EAAKA,eAAeF,KAApB,gBACtB,EAAKG,aAAe,EAAKA,aAAaH,KAAlB,gBACpB,EAAKI,kBAAoB,EAAKA,kBAAkBJ,KAAvB,gBAZR,E,8DAcDH,GAChB,IAAIQ,EAAUjB,EAAOS,GAAKP,KACtBgB,EAAUlB,EAAOS,GAAKN,IAE1BgB,KAAKC,SAAS,CACZZ,aAAcS,EACdR,IAAKA,EACLC,KAAMQ,IACL,WACaG,SAASC,uBAAuB,QAAQ,GAChDC,Y,mCAGGC,GACX,IAAIP,EAAUO,EAAQ,WAAa,qBACnCL,KAAKC,SAAS,CACZb,MAAOiB,EACPhB,aAAcS,M,wCAGAO,GAChB,IAAIf,EAAMe,EAAMC,OAAOxB,GACvBkB,KAAKR,kBAAkBF,K,qCAEVe,GACb,IAAIf,EAAMe,EAAMf,IAAIiB,cAChB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,SAASlB,IACrCY,SAASO,eAAenB,GAAKoB,U,0CAI/BR,SAASS,iBAAiB,UAAWX,KAAKL,kB,+BAG1C,OACE,sBAAKb,GAAG,MAAR,UACE,wBACA,sBAAKA,GAAG,eAAR,UACE,cAAC,EAAD,CACE8B,QAASZ,KAAKb,MAAMC,MACpByB,SAAUb,KAAKJ,eAEjB,cAAC,EAAD,CACEb,KAAMiB,KAAKb,MAAME,eAEnB,cAAC,EAAD,CACEyB,QAASd,KAAKN,kBACdqB,aAAcf,KAAKb,MAAMC,MACzB4B,UAAWhB,KAAKb,MAAMG,IACtBC,KAAMS,KAAKb,MAAMI,UAGrB,iCACE,6D,GApEQ0B,aA6EZC,EAAmB,SAAAhC,GACvB,OACI,qBAAKJ,GAAG,UAAR,SACI,cAACqC,EAAA,EAAD,CAAOC,QAAQ,OAAOtC,GAAG,eAAzB,SACE,iCAASI,EAAMH,YAQrBsC,EAAmB,SAAAnC,GACvB,OACI,sBAAKJ,GAAG,oBAAR,UACE,uBACEwC,UAAU,OACVxC,GAAII,EAAM8B,UACVO,IAAKrC,EAAMK,OAGXiC,OAAOC,KAAK5C,GAAQ6C,KAClB,gBAAEC,EAAF,2BACE,cAACC,EAAA,EAAD,CACER,QAAQ,OACRS,SAAU3C,EAAM6B,YAChBD,QAAS5B,EAAM4B,QACfhC,GAAI6C,EAJN,SAMEA,GADKA,UAWfG,EAAkB,SAAA5C,GACtB,OACI,qBAAKJ,GAAG,mBAAR,SACE,cAAC,IAAD,CACIiD,KAAK,KACLC,QAAQ,YACRC,SAAS,OACTC,QAAQ,KACRC,SAAS,MACTvB,QAAS1B,EAAM0B,QACfC,SAAU3B,EAAM2B,cAOb5B,I,MC3IfmD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpC,SAASO,eAAe,W","file":"static/js/main.d680c5d3.chunk.js","sourcesContent":["const sounds = {\n    'S': {\n        id: 'ghost',\n        text: 'boooh! 👻',\n        url: 'https://raw.githubusercontent.com/neperiana/spooky_drum_machine/master/src/media/Azghost.mp3' \n    },\n    'P': {\n        id: 'haunted',\n        text: '🤡',\n        url: 'https://raw.githubusercontent.com/neperiana/spooky_drum_machine/master/src/media/haunting.mp3' \n    },\n    'O': {\n        id: 'footsteps',\n        text: 'I\\'m coming for you! 🧟‍♂️',\n        url: 'https://raw.githubusercontent.com/neperiana/spooky_drum_machine/master/src/media/Monster_Footsteps.mp3' \n    },\n    'U': {\n        id: 'swamp',\n        text: '... 😟',\n        url: 'https://raw.githubusercontent.com/neperiana/spooky_drum_machine/master/src/media/swamp.mp3' \n    },\n    'K': {\n        id: 'witch',\n        text: 'hihihi!',\n        url: 'https://raw.githubusercontent.com/neperiana/spooky_drum_machine/master/src/media/wlaugh.mp3' \n    },\n    'Y': {\n        id: 'wolf',\n        text: 'awoo! 🐺',\n        url: 'https://raw.githubusercontent.com/neperiana/spooky_drum_machine/master/src/media/wolf2.mp3'\n    },\n};\n\nexport default sounds;","// React\nimport React, { Component } from 'react';\n\n// CSS\nimport './App.css';\n\n// mp3 files\nimport sounds from './audios';\n\n// bootstrap\nimport Button from 'react-bootstrap/Button';\nimport Alert from 'react-bootstrap/Alert';\nimport BootstrapSwitchButton from 'bootstrap-switch-button-react'\n\n// Main App Component\nclass App extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      is_on: true,\n      display_text: 'it\\'s spooky out here ...',\n      key: '',\n      clip: '',\n    };\n    this.handleInteraction = this.handleInteraction.bind(this);\n    this.handleButtonPress = this.handleButtonPress.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleToggle = this.handleToggle.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n  }\n  handleInteraction(key) {\n    let newText = sounds[key].text;\n    let newClip = sounds[key].url;\n\n    this.setState({ \n      display_text: newText,\n      key: key,\n      clip: newClip,\n    }, () => {\n      const sound = document.getElementsByClassName('clip')[0];\n      sound.play();\n    });\n  }\n  handleToggle(event) {\n    let newText = event ? 'back on!' : '...and we are off.'\n    this.setState({\n      is_on: event,\n      display_text: newText,\n    });\n  }\n  handleButtonPress(event){\n    let key = event.target.id;\n    this.handleInteraction(key);\n  }\n  handleKeyPress(event){\n    let key = event.key.toUpperCase();\n    if (['S','P','O','U','K','Y'].includes(key)) {\n      document.getElementById(key).click();\n    }\n  }\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeyPress);\n  }\n  render() {\n    return (\n      <div id=\"App\">\n        <div></div>\n        <div id=\"drum-machine\">\n          <ToggleComponent \n            checked={this.state.is_on} \n            onChange={this.handleToggle}\n          />\n          <DisplayComponent \n            text={this.state.display_text}\n          />\n          <ButtonsContainer \n            onClick={this.handleButtonPress}\n            is_disabled={!this.state.is_on} \n            activeKey={this.state.key}\n            clip={this.state.clip}\n          />\n        </div>\n        <footer>\n          <p>\t&#169; 2020, camila.</p>\n        </footer>\n      </div>\n    );\n  }\n}\n\n\n// Display\nconst DisplayComponent = props => {\n  return (\n      <div id=\"display\">\n          <Alert variant=\"dark\" id=\"displayAlert\">\n            <center>{props.text}</center>\n          </Alert>\n      </div>\n  );\n};\n\n\n// Buttons for drum-pad\nconst ButtonsContainer = props => {\n  return (\n      <div id=\"buttons-container\">\n        <audio\n          className='clip'\n          id={props.activeKey}\n          src={props.clip}\n        />\n        {\n          Object.keys(sounds).map(\n            ([k])=> \n              <Button \n                variant=\"dark\" \n                disabled={props.is_disabled} \n                onClick={props.onClick}\n                id={k}\n                key={k}\n              >{k}</Button>\n              \n          )\n        }\n      </div>\n  );\n};\n\n\n// Toggle\nconst ToggleComponent = props => {\n  return (\n      <div id=\"toggle-container\">\n        <BootstrapSwitchButton\n            size=\"sm\" \n            onstyle=\"secondary\" \n            offstyle=\"dark\"\n            onlabel='on'\n            offlabel='off'\n            checked={props.checked} \n            onChange={props.onChange}\n        />\n      </div>\n  );\n};\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n//import reportWebVitals from './reportWebVitals';\n\n// Importing the Bootstrap CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}